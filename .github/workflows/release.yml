name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v2
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
            COMPILE_FILENAME: librarity_but_dumber_run
            RELEASE_FILENAME: librarity-linux64
            ASSET_MIME: application/zip
            SLASH: /
          - os: macos-latest
            TARGET: macos
            COMPILE_FILENAME: librarity_but_dumber_run
            RELEASE_FILENAME: librarity-macos
            ASSET_MIME: application/zip
            SLASH: /
          - os: windows-latest
            TARGET: windows
            COMPILE_FILENAME: Release\\librarity_but_dumber_run.exe
            RELEASE_FILENAME: librarity-win64.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
            SLASH: \
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout with GitHub
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Configure and Build for ${{matrix.TARGET}} release
        run: |
          make release

      - name: Rename executable
        run: |
          cd cmake-build-release &&
          mv ${{matrix.COMPILE_FILENAME}} ${{matrix.RELEASE_FILENAME}}

      - name: Load Release URL File from release job
        id: download_release_info
        uses: actions/download-artifact@v2
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat "${{steps.download_release_info.outputs.download-path}}${{matrix.SLASH}}release_url.txt"`
          echo ::set-output name=upload_url::$value

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./cmake-build-release/${{ matrix.RELEASE_FILENAME}}
          asset_name: ${{ matrix.RELEASE_FILENAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}